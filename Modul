class Modul {
	public function Curl($url, $header = 0, $post = 0, $metode = 0,$cookie = 0,$null = 0,$proxy = 0){
		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
		curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
		curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 30);
		curl_setopt($ch, CURLOPT_COOKIE,TRUE);
		if($cookie){
			curl_setopt($ch, CURLOPT_COOKIEFILE,"cookie.txt");
			curl_setopt($ch, CURLOPT_COOKIEJAR,"cookie.txt");
		}
		if($post){
			curl_setopt($ch, CURLOPT_POST, true);
			curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
		}
		if($header){
			curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
		}
		if($metode){
			curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $metode);
		}
		if($proxy){
			curl_setopt($ch, CURLOPT_HTTPPROXYTUNNEL, true);
			curl_setopt($ch, CURLOPT_PROXY, $proxy);
		}
		curl_setopt($ch, CURLOPT_HEADER, true);
		$r = curl_exec($ch);
		if($null)return 0;
		$c = curl_getinfo($ch);
		if(!$c) return "Curl Error : ".curl_error($ch); else{
			$hd = substr($r, 0, curl_getinfo($ch, CURLINFO_HEADER_SIZE));
			$bd = substr($r, curl_getinfo($ch, CURLINFO_HEADER_SIZE));
			curl_close($ch);
			return array($hd,$bd);
		}
	}
	public function Line(){
		return b.str_repeat('~',50).n;
	}
	public function Simpan($n){
		if(file_exists($n)) {
			$d = file_get_contents($n);
		}else{
			$d = readline("Input ".$n." : ".n);
			print n;
			file_put_contents($n,$d);
		}
		return $d;
	}
	public function hapus($n){
		unlink($n);
	}
	public function Tmr($tmr){
		date_default_timezone_set("UTC");
		$timr = time()+$tmr;
		$len = 21;
		while(true){
			$ran = rand(1,4);
			$str = c.str_repeat('â€¢',$ran);
			print "\r                                                  \r";
			$res=$timr-time();
			if($res < 1) {break;}
			print str_repeat(" ",$len-$ran).c.$str.p.date('H:i:s',$res).c.$str;sleep(1);
		}
	}
	public function Recaptchav2($apikey, $sitekey, $pageurl){
		$ua = ["host: ocr.captchaai.com","content-type: application/json/x-www-form-urlencoded"];
		while(true){
			$r = self::curl("https://ocr.captchaai.com/in.php?key=$apikey&method=userrecaptcha&googlekey=$sitekey&pageurl=$pageurl",$ua)[1];
			$id = explode('|',$r)[1];
			if(!$id){sleep(20);continue;}
			sleep(20);
			while(true){
				print "prosess......";
				$r = self::curl("https://ocr.captchaai.com/res.php?key=$apikey&action=get&id=$id",$ua)[1];
				if($r == "CAPCHA_NOT_READY"){
					print "\r                 \r";
					print "prosess...";
					sleep(10);
					print "\r                    \r";
					continue;
				}
				print "\r                 \r";
				return explode('|', $r)[1];
			}
		}
	}
}
